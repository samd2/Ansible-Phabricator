---
sudo: required

services:
  - docker

before_install:
  # Pull container.
  # - 'docker pull geerlingguy/docker-$distro-ansible:latest'
  - 'docker pull sdarwin/${distro}-ansible:latest'

env:
  # PHABRICATOR
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: test.yml
  # - distro: centos6
  #   init: /sbin/init
  #   run_opts: "--privileged"
  #   playbook: test.yml
  - distro: debian9
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: test.yml
  # - distro: ubuntu1404
  - distro: trusty
    init: /sbin/init
    run_opts: "--privileged"
    playbook: test.yml
  # - distro: bionic
  #   init: /lib/systemd/systemd
  #   run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  #   playbook: test.yml
  # - distro: ubuntu1604
  - distro: xenial
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: test.yml

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'docker run --add-host phab.example.com:127.0.1.1 --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} sdarwin/$distro-ansible:latest "${init}" > "${container_id}"'

  # upgrade pip
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm pip install --upgrade pip'

  # upgrade ansible
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm pip install ansible --upgrade'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook --extra-vars ''${ansible_vars}'' /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check'

  # Test role.
  - printf "starting main exec"
  - 'docker exec "$(cat ${container_id})" env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook --extra-vars ''${ansible_vars}'' /etc/ansible/roles/role_under_test/tests/${playbook}'
  - printf "finished main exec"

  # Check if website is running
  - 'docker exec "$(cat ${container_id})" env TERM=xterm env ANSIBLE_FORCE_COLOR=1 wget --no-check-certificate --header=''Host: phab.example.com'' -O - -o /dev/null https://localhost | grep ''Welcome to Phabricator'' '  # yamllint disable-line

  # Test role idempotence.
  # - idempotence=$(mktemp)
  # - 'sudo docker exec "$(cat ${container_id})" ansible-playbook --extra-vars ''${ansible_vars}'' #/etc/ansible/roles/role_under_test/tests/${playbook} | tee -a ${idempotence}'
  # - >
  #  tail ${idempotence}
  #  | grep -q 'changed=0.*failed=0'
  #  && (echo 'Idempotence test: pass' && exit 0)
  #  || (echo 'Idempotence test: fail' && exit 1)

after_success:
  # Clean up.
  - 'docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
